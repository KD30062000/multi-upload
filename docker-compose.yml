version: "3.8"

services:
  db:
    image: postgres:14.6
    environment:
      POSTGRES_DB: fileupload_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - SECRET_KEY=your-production-secret-key
      - ALLOWED_HOSTS=yourdomain.com,localhost,127.0.0.1
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/fileupload_db
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME:-us-east-1}
      - SECURE_SSL_REDIRECT=0
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn fileupload.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/staticfiles:/static
      - ./backend/media:/media
    depends_on:
      - backend

volumes:
  postgres_data:
